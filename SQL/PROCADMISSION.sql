SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [MANASBHARATI].[PROCADMISSION]
	-- Add the parameters for the stored procedure here
	@REGNO INT = NULL,
	@ROLLNO INT = NULL,
	@SESSION NVARCHAR(100) = NULL,
	@STUDNAME NVARCHAR(300) = NULL,
	@MOBILE NVARCHAR(10) = NULL,
	@EMAIL NVARCHAR(320) = NULL,
	@AADHAR NVARCHAR(12) = NULL,
	@DOB DATETIME = NULL,
	@GENDER NVARCHAR(1) = NULL,
	@CASTE NVARCHAR(100) = NULL,
	@ADMITTED_CLASS NVARCHAR(300) = NULL,
	@SECTION NVARCHAR(10) = NULL,
	@PHOTOGRAPH NVARCHAR(300) = NULL,
	@FATHER_NAME NVARCHAR(300) = NULL,
	@MOTHER_NAME NVARCHAR(300) = NULL,
	@PARENTMOBILE NVARCHAR(10) = NULL,
	@BLOODGROUP NVARCHAR(10) = NULL,
	@PARENTINCOME NVARCHAR(100) = NULL,
	@PRESENT_ADDRESS NVARCHAR(2000) = NULL,
	@PERMANENT_ADDRESS NVARCHAR(2000) = NULL,
	@OUTPUTMESSAGE VARCHAR(500)  = NULL OUT,
	@option int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	IF(@option = 1)
	BEGIN

	INSERT INTO [MANASBHARATI].[ADMISSION] 

	(SESSION,STUDNAME,MOBILE,EMAIL,AADHAR,DOB,GENDER ,CASTE ,ADMITTED_CLASS,
	PHOTOGRAPH,FATHER_NAME,MOTHER_NAME,PARENTMOBILE,BLOODGROUP,PARENTINCOME,
	PRESENT_ADDRESS,PERMANENT_ADDRESS,CREATEDATE,UPDATEDATE)

	VALUES (@SESSION,@STUDNAME,@MOBILE,@EMAIL,@AADHAR,@DOB,@GENDER,@CASTE,@ADMITTED_CLASS,@PHOTOGRAPH,
	@FATHER_NAME,@MOTHER_NAME,@PARENTMOBILE,@BLOODGROUP,@PARENTINCOME,
	@PRESENT_ADDRESS,@PERMANENT_ADDRESS,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

	SET @OUTPUTMESSAGE = SCOPE_IDENTITY()
    RETURN  @OUTPUTMESSAGE

	END

	IF(@option = 2)
	BEGIN
	SELECT * FROM [MANASBHARATI].[ADMISSION] ORDER BY CREATEDATE;
	END

	-- UPDATE ADMISSION DETAILS
	IF(@option = 3)
	BEGIN
	UPDATE [MANASBHARATI].[ADMISSION] SET MOBILE = @MOBILE, ADMITTED_CLASS = @ADMITTED_CLASS, PRESENT_ADDRESS = @PRESENT_ADDRESS WHERE REGNO = @REGNO;
	
	END
	-- ALLOT ROLLNO AND SECTION
	IF(@option = 4)
	BEGIN
	IF NOT EXISTS(SELECT * FROM [MANASBHARATI].[ADMISSION] WHERE SECTION = @SECTION AND ROLLNO = @ROLLNO AND ADMITTED_CLASS = @ADMITTED_CLASS) 
	BEGIN 
	UPDATE [MANASBHARATI].[ADMISSION] SET SECTION = @SECTION, ROLLNO = @ROLLNO WHERE REGNO = @REGNO;
	SET @OUTPUTMESSAGE = 'Successfully allotted.'
	END
	ELSE
	BEGIN
	SET @OUTPUTMESSAGE = 'Roll number and section already allotted.'
	END
	END

	-- ADMISSION DETAILS BY REGNO
	IF(@option = 5)
	BEGIN
	SELECT * FROM [MANASBHARATI].[ADMISSION] WHERE REGNO = @REGNO;
	END

END
